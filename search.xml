<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Android相对布局</title>
    <url>/2021/01/16/Android%E7%9A%84%E5%9B%9B%E7%A7%8D%E5%B8%83%E5%B1%80/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="LinearLayout线性布局"><a href="#LinearLayout线性布局" class="headerlink" title="LinearLayout线性布局"></a>LinearLayout线性布局</h2><p>​       线性布局顾名思义主要用于布局分配情况为水平或者竖直的情况,在此基础上对各控件进行位置的设定,同时只有LinearLayout才有权重(weight),可以等比例大小设定控件。</p>
<span id="more"></span>

<h2 id="RelativeLayout相对布局"><a href="#RelativeLayout相对布局" class="headerlink" title="RelativeLayout相对布局"></a>RelativeLayout相对布局</h2><p>​        相对布局显得更加随意，对于各控件的位置属性也很多，可以将控件设定在任意位置上。</p>
<h2 id="FrameLayout帧布局"><a href="#FrameLayout帧布局" class="headerlink" title="FrameLayout帧布局"></a>FrameLayout帧布局</h2><p>​       帧布局的应用场景较少，所有的控件都会默认摆放在布局的左上角，对于各控件的位置设定也较少。</p>
<h2 id="百分比布局"><a href="#百分比布局" class="headerlink" title="百分比布局"></a>百分比布局</h2><p>​       百分比布局为一种新增的布局，只为FrameLayout和RelativeLayout进行了功能扩展，提供了PercentFrameLayout和PercentRelativeLayout两个全新的布局。</p>
<p>​      利用app:layout_widthPercent和app:layou_heightPercent来指定宽高</p>
<p>​     </p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Android基本控件</title>
    <url>/2021/01/11/Android%E5%9F%BA%E6%9C%AC%E6%8E%A7%E4%BB%B6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="RadioGroup"><a href="#RadioGroup" class="headerlink" title="RadioGroup"></a>RadioGroup</h2><p>​       RdioGroup是单选组合框，可以容纳多个RadioButton的一个容器。在没有RadioGroup的情况下，RadioButton可以全部被选中；当多个RadioButton被RadioGroup包含的情况下，RadioButton只可以选择一个，从而达到了单选的目的。</p>
<span id="more"></span>

<p><em>RadioGroup相关方法</em></p>
<p>​       1.RadioGroup.getCheckedRadioButtonId();</p>
<p>　　　　该方法可以获取选中的按钮</p>
<p>　　2.RadioGroup.clearCheck();</p>
<p>　　　　该方法可以清除选中状态</p>
<p>　　3.setOnCheckedChangeLintener(RadioGroup.OnCheckedChangeListener listener);</p>
<p>　　　　当一个单选按钮组中的单选按钮选中状态发生改变的时候调用的回调方法</p>
<p>　　4.RadioGroup.check(int id);</p>
<p>　　　　该方法可以通过传入ID来设置该选项为选中状态</p>
<p>　　5.addView(View child,int index, ViewGroup.LayoutParams params);</p>
<p>　　　　使用指定布局参数添加一个字视图（其中child是要添加的子视图，index是将要添加子视图的位置，params 所要添加的子视图的布局参数）</p>
<p>　　6.RadioButton.getText();</p>
<p>　　　　获取单选框的值</p>
<p><em>RadioGroup与RadioButton的关系</em></p>
<p>​         1.RadioButton表示单个原型单选框，而RadioGroup是可以容纳多个RadioButton的容器</p>
<p>　　  2.每个RadioGroup中的RadioButton同时只能有一个被选中</p>
<p>　　  3.不同的RadioGroup中的RadioButton互不相干，即如果组A中有一个选中了，那么组B中依然可以有一个被选中。</p>
<p>　　  4.在大部分场合下，一个RadioGroup中至少有两个RadioButton</p>
<p>　　  5.在大部分场合下，一个RadioGroup中的RadioButton默认会有一个被选中，并建议您将它放在RadioGroup的起始位置</p>
<p><img src="/../images/Android%E5%9F%BA%E6%9C%AC%E6%8E%A7%E4%BB%B6/radiogroup.gif"></p>
<p>​          (下面的三个按钮总体为一个RadioGroup,单独一个按钮为RadioButton)</p>
<h2 id="Selector"><a href="#Selector" class="headerlink" title="Selector"></a>Selector</h2><p>​       个人理解selector主要用于按钮的状态变化，如按钮按下后会变色，即两种不同的按钮状态的实现。</p>
<p>​       对于按钮图标的更换只需要调用一个selector文件并将按下后与按下前的图标分别对应即可:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">android:drawableTop=&quot;@drawable/rb_common_frame_drawble_selector&quot;</span><br></pre></td></tr></table></figure>

<p>​      语句后面的内容即引用了selector，注意是在drawable目录下</p>
<p>​       但是对于文字的变色处理，则不能在drawable目录下进行调用，需要在color目录下进行调用，如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">android:textColor=&quot;@color/rb_textcolor_selector&quot;</span><br></pre></td></tr></table></figure>

<p>对于网上所介绍的利用插件selector chapek，在drawble目录下放下两张以_normar,_pressed为后缀的图片，然后可以右键drawable目录直接调用selector，暂时未能成功。</p>
<h2 id="Bundle"><a href="#Bundle" class="headerlink" title="Bundle"></a>Bundle</h2><p>​       Bundle是用来传递数据的“容器”，它保存的数据，是以key-value(键值对)的形式存在的。<br>我们经常使用Bundle在Activity之间传递数据，传递的数据可以是boolean、byte、int、long、float、double、string等基本类型或它们对应的数组，也可以是对象或对象数组。当Bundle传递的是对象或对象数组时，必须实现Serializable 或Parcelable接口。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//新建一个Bundle类</span></span><br><span class="line">Bundle mBundle = <span class="keyword">new</span> Bundle();   </span><br><span class="line"><span class="comment">//bundle类中加入数据（key -value的形式，另一个activity里面取数据的时候，就要用到key，找出对应的value）</span></span><br><span class="line">mBundle.putString(<span class="string">&quot;Data&quot;</span>, <span class="string">&quot;data from TestBundle&quot;</span>);  </span><br><span class="line"><span class="comment">//新建一个intent对象，并将该bundle加入这个intent对象</span></span><br><span class="line">Intent intent = <span class="keyword">new</span> Intent();    </span><br><span class="line">intent.setClass(TestBundle.<span class="keyword">this</span>, Target.class);    </span><br><span class="line">intent.putExtras(mBundle);  </span><br></pre></td></tr></table></figure>



<h2 id="Fragment"><a href="#Fragment" class="headerlink" title="Fragment"></a>Fragment</h2><p>1.关于Fragment的切换</p>
<p>​          Fragment的切换主要有两种方式:</p>
<p>​               replace();但是replace()方法会在每次切换的时候Fragment都会重新实例化，重新加载一次数据，对于用户的流量造成无端浪费，据官方文档解释，replace()方法仅适用于上一个Fragment不再需要时采用的办法。</p>
<p>​              另一种办法是add()，切换时show()与hide()结合使用，当切换Fragment时将当前的fragment  hide()，add()另一个fragment，再次切换时，只需要hide()当前的，show()另一个。</p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>JSP学习日志</title>
    <url>/2021/09/10/JSP%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="第一节-HTML"><a href="#第一节-HTML" class="headerlink" title="第一节 HTML"></a>第一节 HTML</h2><p>HTML（Hyper Text Markup Language）：超文本标记语言</p>
<span id="more"></span>

<h3 id="W3C标准"><a href="#W3C标准" class="headerlink" title="W3C标准"></a>W3C标准</h3><ul>
<li>结构化标准语言：HTML、XML</li>
<li>表现标准语言：CSS</li>
<li>行为标准语言：DOM、ECMAScript</li>
</ul>
<h3 id="HTML基本结构"><a href="#HTML基本结构" class="headerlink" title="HTML基本结构"></a>HTML基本结构</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    网页头部</span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	主体部分</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p>&lt;!- -注释- - &gt;</p>
<h3 id="标签"><a href="#标签" class="headerlink" title="标签"></a><meta>标签</h3><ul>
<li><p>描述性标签，用来描述网站的一些相关信息</p>
</li>
<li><p>用来做SEO（搜索引擎优化）</p>
</li>
</ul>
<h3 id="网页基本标签"><a href="#网页基本标签" class="headerlink" title="网页基本标签"></a>网页基本标签</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--标题标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>一级标签<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>二级标签<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>二级标签<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>二级标签<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span>二级标签<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>二级标签<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--段落标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>跑得快 跑得快<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>两只老虎<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>按住Tab可快捷生成标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--换行标签--&gt;</span></span><br><span class="line">跑得快 跑得快 <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">两只老虎 <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">p按住Tab键快捷 <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--水平线标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--粗体，斜体--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>字体样式标签<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>粗体  <span class="tag">&lt;<span class="name">strong</span>&gt;</span>变粗<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>斜体 <span class="tag">&lt;<span class="name">em</span>&gt;</span>变斜<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--特殊符号--&gt;</span></span><br><span class="line">空格： 空<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>格</span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="symbol">&amp;gt;</span>   &gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="symbol">&amp;lt;</span>   &lt;</span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="symbol">&amp;copy;</span>版权</span><br></pre></td></tr></table></figure>

<h3 id="图像标签"><a href="#图像标签" class="headerlink" title="图像标签"></a>图像标签</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span> = <span class="string">“../resources/image/1.jpg(图片地址）</span>&quot; <span class="attr">alt</span> = <span class="string">“图片名称</span>&quot; <span class="attr">title</span> =</span></span><br><span class="line"><span class="tag">        <span class="string">“MizuGo</span>&quot; <span class="attr">width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>src 图片路径地址  ../  代表上一级地址 </p>
<p>alt 图片名称；往往用于备注说明，当图片加载未成功时显示</p>
<p>title 悬停图片上所显示的文字</p>
<h3 id="链接标签"><a href="#链接标签" class="headerlink" title="链接标签"></a>链接标签</h3><h4 id="超链接标签"><a href="#超链接标签" class="headerlink" title="超链接标签"></a>超链接标签</h4><p><a>标签</a></p>
<p>href:表示要跳转到的页面（必填）</p>
<p>target:表示页面要打开的位置</p>
<p>​    _blank:表示在新标签页打开</p>
<p>​    _self：表示在当前标签页打开（默认）_</p>
<!--文字链接形式-->

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http:\\\www.baidu.com&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>点击跳转到百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<!--图片链接形式-->

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../resources/image/1.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;图片&quot;</span> <span class="attr">title</span>=<span class="string">&quot;悬停文字&quot;</span>&gt;</span>`</span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="锚链接"><a href="#锚链接" class="headerlink" title="锚链接"></a>锚链接</h4><ol>
<li>需要一个标记</li>
<li>跳转到该标记</li>
</ol>
<!--用name属性作标记-->

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;tag&quot;</span>&gt;</span>tag<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<!--用#+name跳转到对应的标记-->

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#tag&quot;</span>&gt;</span>回到标记处<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="功能性链接"><a href="#功能性链接" class="headerlink" title="功能性链接"></a>功能性链接</h4><!--邮件链接-->

<p>mailto</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;mailto:406587247@qq.com&quot;</span>&gt;</span>点击联系我<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<!--QQ链接-->

<p>QQ推广中获取</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://wpa.qq.com/msgrd?v=3&amp;uin=406587247&amp;site=qq&amp;menu=yes&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">src</span>=<span class="string">&quot;http://wpa.qq.com/pa?p=2:406587247:53&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;你好加我好友&quot;</span> <span class="attr">title</span>=<span class="string">&quot;你好加我好友&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><!--有序列表-->

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Java<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>C++<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Python<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>效果图如下：</p>
<ol>
    <li>Java</li>
    <li>C++</li>
    <li>Python</li>
</ol>

<!--无序列表-->

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Java<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>C++<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Python<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果图如下：</p>
<ul>
    <li>Java</li>
    <li>C++</li>
    <li>Python</li>
</ul>
<!--自定义列表-->

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--dl：标签</span></span><br><span class="line"><span class="comment">dt:列表名称</span></span><br><span class="line"><span class="comment">dd:列表内容</span></span><br><span class="line"><span class="comment">多用于网站底部内容--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>语言<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>Java<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>C++<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>Python<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>程度<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>2<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>3<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果图如下：</p>
<dl>
    <dt>语言</dt>
    <dd>Java</dd>
    <dd>C++</dd>
    <dd>Python</dd>
    <dt>程度</dt>
    <dd>1</dd>
    <dd>2</dd>
    <dd>3</dd>
</dl>
### 表格

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--tr:行</span></span><br><span class="line"><span class="comment">td:列</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--border 边框--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1px&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--colspan 跨列--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>1-1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>1-2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>1-3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--rowspan 跨行--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>2-1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>2-2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>2-3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> &gt;</span>3-1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>3-2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>3-3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    </span><br></pre></td></tr></table></figure>

<p>效果图如下：</p>
<table border="1px">
    <tr>
        <td cospan="2">1-1</td>
         <td>1-2</td>
        <td>1-3</td>
    </tr>
    <tr>
        <td rowpan="2">2-1</td>
         <td>2-2</td>
        <td>2-3</td>
    </tr>
    <tr>
        <td>3-1</td>
         <td>3-2</td>
        <td>3-3</td>
    </tr>
</table>
### 媒体元素

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--src：资源路径</span></span><br><span class="line"><span class="comment">controls：控制条（无此项会导致资源不显示）</span></span><br><span class="line"><span class="comment">autoplay：自动播放--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--视频元素--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;../resources/video/1.mp4 controls autoplay&quot;</span> <span class="attr">width</span>=<span class="string">&quot;300px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;600px&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--音频元素--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">&quot;../resources/video/2.mp3 controls&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure>

<!--视频元素-->



<p>效果图如下：</p>
<p><video src="../video/1.mp4" width="300px" height="600px"></video></p>
<!--音频元素-->

<p>效果图如下：</p>
<p><audio src="../video/2.mp3"></audio></p>
<h3 id="页面结构分析"><a href="#页面结构分析" class="headerlink" title="页面结构分析"></a>页面结构分析</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--header：头部</span></span><br><span class="line"><span class="comment">section：主体</span></span><br><span class="line"><span class="comment">footer：脚部</span></span><br><span class="line"><span class="comment">nav：导航类--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span><span class="tag">&lt;<span class="name">h2</span>&gt;</span>网页头部<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span><span class="tag">&lt;<span class="name">h2</span>&gt;</span>网页主体<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span><span class="tag">&lt;<span class="name">h2</span>&gt;</span>网页脚部<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="内联框架"><a href="#内联框架" class="headerlink" title="内联框架"></a>内联框架</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--iframe：内联框架</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">src:路径</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">name:内联框架名</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">width：宽</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">height：高--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--导入其他网页--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;http://www.bilibili.com&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果图如下：</p>
<iframe src="https://www.bilibili.com" frameborder="0" width="400px" height="300px"></iframe>



<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--b站视频导入--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;//player.bilibili.com/player.html?aid=632543773&amp;bvid=BV1qb4y1S7p4&amp;cid=396396792&amp;page=1&quot;</span> <span class="attr">width</span>=<span class="string">&quot;400px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;300px&quot;</span><span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果图如下：</p>
<iframe src="//player.bilibili.com/player.html?aid=632543773&bvid=BV1qb4y1S7p4&cid=396396792&page=1" width="400px" height="300px" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>



<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--利用超链接导入自己的网页--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hello&quot;</span> <span class="attr">width</span>=<span class="string">&quot;400px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;300px&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;1.MyFirstWeb.html&quot;</span> <span class="attr">target</span>=<span class="string">&quot;hello&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>可实现在内联框架中打开自己的网页</p>
<h3 id="表单post和get的提交"><a href="#表单post和get的提交" class="headerlink" title="表单post和get的提交"></a>表单post和get的提交</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--表单form</span></span><br><span class="line"><span class="comment">name：表单名（必填）</span></span><br><span class="line"><span class="comment">action：表单提交的位置，可以为网站，也可以是请求处理的地址</span></span><br><span class="line"><span class="comment">methon：表单提交方式（post、get）</span></span><br><span class="line"><span class="comment">get方式提交：可以在url中看到提交的信息，不安全</span></span><br><span class="line"><span class="comment">post方式提交：比较安全，可以提交大文件</span></span><br><span class="line"><span class="comment">value:默认值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;www.baidu.com&quot;</span> <span class="attr">methon</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>注册：</span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        用户名<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;用户名&quot;</span> <span class="attr">value</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span><br><span class="line">        密码<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;密码&quot;</span> <span class="attr">value</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span>    </span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;清空&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果如下：理论上来说点击提交会跳转到百度</p>
<form action="www.baidu.com" methon="post">
    <p>注册：
<br>
        用户名<input type="text" name="用户名" value="username">
        密码<input type="password" name="密码" value="password">
    </p>    
</form>



<p>
    <input type="submit">
    <input type="reset" value="清空">
</p>



<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--单选框标签</span></span><br><span class="line"><span class="comment">input type=&quot;radio&quot;</span></span><br><span class="line"><span class="comment">value:单选框的值</span></span><br><span class="line"><span class="comment">需要让同一组的name相同--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;boy&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span>&gt;</span>男</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;girl&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span>&gt;</span>女</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<p>
    <input type="radio" value="boy" name="sex">男
    <input type="radio" value="girl" name="sex">女
</p>



<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--多选框标签</span></span><br><span class="line"><span class="comment">input type=&quot;checkbox&quot;--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>爱好：</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;a&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span>&gt;</span>睡觉</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;b&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span>&gt;</span>打游戏</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;C&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span>&gt;</span>看书</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<p>爱好：
  <input type="checkbox" value="a" name="hobby">睡觉
    <input type="checkbox" value="b" name="hobby">打游戏
    <input type="checkbox" value="C" name="hobby">看书    
</p>



<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--button按钮</span></span><br><span class="line"><span class="comment">image图像</span></span><br><span class="line"><span class="comment">value：按钮所显示的文字--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">name</span>=<span class="string">&quot;btn1&quot;</span> <span class="attr">value</span>=<span class="string">&quot;变长&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;image&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../../source/images/JSP学习日志/1.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<p>
    <input type="button" name="btn1" value="变长">
    <input type="image" src="../../source/images/JSP学习日志/1.png">
</p>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--滑块--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>音量</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;range&quot;</span> <span class="attr">name</span>=<span class="string">&quot;voice&quot;</span> <span class="attr">max</span>=<span class="string">&quot;100&quot;</span> <span class="attr">min</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<p>音量
    <input type="range" name="voice" max="100" min="0">
</p>



<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--搜索框--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>搜索框</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;search&quot;</span> <span class="attr">name</span>=<span class="string">&quot;search&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<p>搜索框
    <input type="search" name="search">
</p>



<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--列表</span></span><br><span class="line"><span class="comment">selected默认选项--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>列表</span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span>&gt;</span>国家</span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span>&gt;</span>中国<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">selected</span>&gt;</span>美国<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span>&gt;</span>英国<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<p>列表
    <select>国家
        <option>中国</option>
        <option selected>美国</option>
        <option>英国</option>
    </select>
</p>



<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--文本域--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>反馈</span><br><span class="line">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;textarea&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;20&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span>&gt;</span>文本内容<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<p>反馈
    <textarea name="textarea" cols="20" rows="10">文本内容</textarea>
</p>



<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--文件域--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>添加文件</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">name</span>=<span class="string">&quot;upload&quot;</span> <span class="attr">value</span>=<span class="string">&quot;上传&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<p>添加文件
    <input type="file" name="file">
    <input type="button" name="upload" value="上传">    
</p>


<h3 id="表单的限制"><a href="#表单的限制" class="headerlink" title="表单的限制"></a>表单的限制</h3><ul>
<li>disabled：不可操作</li>
<li>hidden：隐藏</li>
<li>readonly：只读</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--增强鼠标可用性--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;tag&quot;</span>&gt;</span>点击试试（点击汉字会跳转到文本框）<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;tag&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<p>
    <label for="tag">点击试试（点击汉字会跳转到文本框）</label>
    <input type="text">
</p>

<h3 id="表单初级验证"><a href="#表单初级验证" class="headerlink" title="表单初级验证"></a>表单初级验证</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--提示信息--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>文本框</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<p>文本框
    <input type="text" name="text" placeholder="请输入">
</p>



<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--非空判断--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>url</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;url&quot;</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<p>url
    <input type="url" name="url" required>
</p>



<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--自定义邮箱</span></span><br><span class="line"><span class="comment">https://www.jb51.net/tools/regexsc.htm正则表达式网站--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>自定义邮箱</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;diymail&quot;</span> <span class="attr">pattern</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>



<hr>

<h2 id="第二节-CSS"><a href="#第二节-CSS" class="headerlink" title="第二节 CSS"></a>第二节 CSS</h2><p>CSS：层叠级联样式表</p>
<h3 id="CSS的优势"><a href="#CSS的优势" class="headerlink" title="CSS的优势"></a>CSS的优势</h3><ol>
<li>内容和表现分离</li>
<li>网页结构表现统一，可以实现复用</li>
<li>样式十分的丰富</li>
<li>建议使用独立于html的css文件</li>
<li>利用SEO，容易被搜索引擎收录</li>
</ol>
<h3 id="CSS的3中导入方式"><a href="#CSS的3中导入方式" class="headerlink" title="CSS的3中导入方式"></a>CSS的3中导入方式</h3><p>行内样式：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--行内样式--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span> <span class="attr">style</span>=<span class="string">&quot;color:red&quot;</span>&gt;</span>我是标题</span><br><span class="line"><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<h4 style="color:red">我是标题
</h4>


<p>内部式</p>
<!--内部式-->

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">    <span class="selector-tag">h4</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">color</span>:blue;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span></span><br><span class="line">    我是标题</span><br><span class="line"><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br></pre></td></tr></table></figure>


<p>效果如下：</p>
<style>
    h4{
        color:blue;
    }
</style>
<h4>
    我是标题
</h4>


<p>外部式：</p>
<p>​        外部式较前两种而言更加规范，往往采用这种方式。</p>
<p>​        涉及到两个文件，html文件和css文件</p>
<p>css文件：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">h4&#123;</span><br><span class="line">color:green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>html文件：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span></span><br><span class="line">    我是标题</span><br><span class="line"><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--将html文件与css文件链接起来--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>优先级：</p>
<p>​        遵循覆盖原则，按行加载，因此后加载的会将之前加载的覆盖掉</p>
<h3 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h3><p>标签选择器</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--标签选择器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">    <span class="selector-tag">h4</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">color</span>:red;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span></span><br><span class="line">    标签1</span><br><span class="line"><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span></span><br><span class="line">    标签2</span><br><span class="line"><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<style>
    h4{
        color:red;
    }
</style>
<h4>
    标签1
</h4>
<h4>
    标签2
</h4>


<p>类选择器</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--类选择器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">    <span class="selector-class">.BQ1</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">color</span>:blue;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.BQ2</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">color</span>:green;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">&quot;BQ1&quot;</span>&gt;</span></span><br><span class="line">    标签1</span><br><span class="line"><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">&quot;BQ2&quot;</span>&gt;</span></span><br><span class="line">    标签2</span><br><span class="line"><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>PS:</p>
<blockquote>
<p>​    可以复用，对应相同类的有相同样式</p>
</blockquote>
<p>id选择器</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--id选择器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">    <span class="selector-id">#BQ</span>&#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">color</span>: coral;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.style1</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">&quot;style1&quot;</span>&gt;</span>标签1<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span> <span class="attr">id</span>=<span class="string">&quot;BQ&quot;</span>&gt;</span>标签2<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">&quot;style1&quot;</span>&gt;</span>标签3<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>PS:</p>
<blockquote>
<p>​        不可以复用，当需要指定某一个标签改变样式时，使用id</p>
<p>选择器优先级问题：</p>
<p>​        id选择器&gt;class选择器&gt;标签选择器</p>
</blockquote>
<h3 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h3><p>​            属性选择器是将id选择器和类选择器结合的一种选择器。</p>
<p>格式为：</p>
<p>​        a[属性名]{对应的属性}</p>
<hr>

<h2 id="第三节-JSP"><a href="#第三节-JSP" class="headerlink" title="第三节 JSP"></a>第三节 JSP</h2><h3 id="引入JavaScript"><a href="#引入JavaScript" class="headerlink" title="引入JavaScript"></a>引入JavaScript</h3><p>1.内部标签</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  alert(<span class="string">&quot;hello world&quot;</span>)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>2.外部引入</p>
<p>a.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">alert(<span class="string">&quot;hello world&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>test.html</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/a.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>PS：</p>
<blockquote>
<p>不用定义type，也默认是JavaScript</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="基本语法入门"><a href="#基本语法入门" class="headerlink" title="基本语法入门"></a>基本语法入门</h3><p>1.定义变量  变量类型  变量名 = 变量值</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> score =<span class="number">1</span></span></span><br><span class="line"><span class="javascript">alert(score);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>2.条件控制</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(score&gt;<span class="number">60</span>&amp;&amp;score&lt;<span class="number">70</span>)&#123;</span><br><span class="line">    alert(<span class="literal">true</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    alert(<span class="literal">false</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//console.log();在浏览器控制台中打印信息</span></span><br></pre></td></tr></table></figure>

<h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p>0.变量</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> la</span><br><span class="line"><span class="comment">//不能以数字开头，var在方法内部定义为局部变量，在方法外部定义为全局变量</span></span><br><span class="line"><span class="keyword">let</span> la</span><br><span class="line"><span class="comment">//定义局部变量</span></span><br></pre></td></tr></table></figure>

<p>1.number</p>
<p>js不区分小数和整数</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="number">123</span><span class="comment">//整数</span></span><br><span class="line"><span class="number">123.1</span><span class="comment">//浮点数</span></span><br><span class="line"><span class="number">1.123e3</span><span class="comment">//科学计数法</span></span><br><span class="line">-<span class="number">999</span>/负数</span><br><span class="line"><span class="literal">NaN</span><span class="comment">//not a number</span></span><br><span class="line"><span class="literal">Infinity</span><span class="comment">//无限大</span></span><br></pre></td></tr></table></figure>

<p>2.字符串 </p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;abc&#x27;</span>  <span class="string">&quot;abc&quot;</span></span><br></pre></td></tr></table></figure>

<p>多行字符串编写</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> name = <span class="string">`11</span></span><br><span class="line"><span class="string">			22</span></span><br><span class="line"><span class="string">			33`</span></span><br></pre></td></tr></table></figure>

<p>模板字符串</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> name = <span class="string">`11</span></span><br><span class="line"><span class="string">		   22</span></span><br><span class="line"><span class="string">		   33`</span></span><br><span class="line"><span class="keyword">let</span> msg = <span class="string">`你好,<span class="subst">$&#123;name&#125;</span>`</span></span><br></pre></td></tr></table></figure>

<p>字符串长度</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">str.length</span><br></pre></td></tr></table></figure>

<p>PS：</p>
<blockquote>
<p>字符串有不可变性</p>
</blockquote>
<p>3.布尔值</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="literal">true</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>4.逻辑运算</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&amp;&amp; 和</span><br><span class="line">|| 或</span><br><span class="line">！ 非</span><br></pre></td></tr></table></figure>

<p>5.比较运算符</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">=</span><br><span class="line">== 等于（类型不一样，值一样，也会判断为<span class="literal">true</span>)</span><br><span class="line">=== 绝对等于(类型一样，值一样，判断为<span class="literal">true</span>)</span><br></pre></td></tr></table></figure>

<p>PS：</p>
<blockquote>
<ul>
<li>NaN与所有的数值都不相等，包括自己</li>
<li>只能通过isNaN(NaN)来判断这个数是否是NaN</li>
</ul>
</blockquote>
<p>浮点数问题：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log((<span class="number">1</span>/<span class="number">3</span>)===(<span class="number">1</span>-<span class="number">2</span>/<span class="number">3</span>)</span><br></pre></td></tr></table></figure>

<p>​        尽量避免使用浮点数进行运算，存在精度问题</p>
<p>6.null和undefined</p>
<ul>
<li>null 空</li>
<li>undefined 未定义</li>
</ul>
<p>7.数组</p>
<p>Java的数组必须是一系列相同类型的对象；在JavaScript中不需要这样</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="literal">null</span>,<span class="literal">true</span>,<span class="string">&quot;hello&quot;</span>]</span><br></pre></td></tr></table></figure>

<p>取数组下标，如果越界了，就会undefined，并不会像java一样报错</p>
<p>长度</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">arr.length</span><br></pre></td></tr></table></figure>

<p>PS：</p>
<blockquote>
<p>加入给arr.length赋值，数组大小就会发生变化（数组是动态的），如果赋值过小，元素就会丢失</p>
<p>字符串的”1”和数字1是不同的</p>
</blockquote>
<p>slice( )</p>
<p>截取array的一部分，返回一个新数组，包头不包尾</p>
<p>push( )、pop( )</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">push:压入到尾部</span><br><span class="line"><span class="attr">pop</span>:弹出尾部的一个元素</span><br></pre></td></tr></table></figure>

<p>unshift( )、shift( )</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">unshift:压入到头部</span><br><span class="line">shift：弹出头部的一个元素</span><br></pre></td></tr></table></figure>

<p>concat( )</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr1 = [<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;a&#x27;</span>]</span><br><span class="line">arr1.concat([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line">&gt;(<span class="number">6</span>)[<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;a&#x27;</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br></pre></td></tr></table></figure>

<p>PS:</p>
<blockquote>
<p>concat( )并没有修改数组，只是会返回一个新的数组</p>
</blockquote>
<p>多维数组</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">arr = [[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">2</span>,<span class="number">3</span>],[<span class="number">3</span>,<span class="number">4</span>]]</span><br><span class="line">arr[<span class="number">0</span>]</span><br><span class="line">&gt;[<span class="number">1</span>,<span class="number">2</span>]</span><br><span class="line">arr[<span class="number">0</span>][<span class="number">1</span>]</span><br><span class="line">&gt;<span class="number">2</span></span><br></pre></td></tr></table></figure>

<p>8.对象</p>
<p>对象是{ },数组是[ ]</p>
<blockquote>
<p>每个属性之前用逗号隔开，最后一个不需要添加</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> 对象名 = &#123;</span><br><span class="line">    属性名：属性值</span><br><span class="line">    属性名：属性值</span><br><span class="line">    属性名：属性值</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Java创建对象</span></span><br><span class="line"><span class="comment">//Person person = new Person(1,2,3);</span></span><br><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&quot;yr&quot;</span>,</span><br><span class="line">    <span class="attr">age</span>:<span class="number">22</span>,</span><br><span class="line">    <span class="attr">tags</span>:[<span class="string">&#x27;js&#x27;</span>,<span class="string">&#x27;java&#x27;</span>,<span class="string">&#x27;web&#x27;</span>]        </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>取对象的值</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">person.name</span><br><span class="line">&gt;<span class="string">&quot;yr&quot;</span></span><br><span class="line">person.age</span><br><span class="line">&gt;<span class="number">22</span></span><br></pre></td></tr></table></figure>

<p>动态的删减属性，通过delete删除对象的属性</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">delete</span> person.name</span><br><span class="line">&gt;<span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>动态的添加，直接给新的属性添加值即可</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">person.email=<span class="string">&quot;400@123.com&quot;</span></span><br><span class="line">&gt;<span class="string">&quot;400@123.com&quot;</span></span><br></pre></td></tr></table></figure>

<p>判断属性是否在这个对象中：xxx   in   xxx</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;age&#x27;</span> <span class="keyword">in</span> person</span><br><span class="line">&gt;<span class="literal">true</span></span><br><span class="line"><span class="comment">//继承</span></span><br><span class="line"><span class="string">&#x27;toString&#x27;</span> <span class="keyword">in</span> person</span><br><span class="line">&gt;<span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>判断属性值是否在这个对象中   has</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">person.hasOwnProperty(<span class="string">&quot;toString&quot;</span>)</span><br><span class="line">&gt;<span class="literal">false</span></span><br><span class="line">person.hasOwnProperty(<span class="string">&quot;age&quot;</span>)</span><br><span class="line">&gt;<span class="literal">true</span></span><br></pre></td></tr></table></figure>



<p>PS:</p>
<blockquote>
<p>‘use strict’;   严格检查模式，预防JavaScript的随意性导致产生的一些问题，必须写在JavaScript的第一行</p>
<p>js中对象，{······}表示一个对象，键值对描述属性xxxx:xxxx，多个属性之间使用逗号隔开，最后一个属性不加逗号 </p>
<p>使用一个不存在的对象属性，不会报错，只会报undefined</p>
</blockquote>
<p>9.流程控制</p>
<p>if判断</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> age = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">if</span>(age&gt;<span class="number">3</span>)&#123;</span><br><span class="line">    alert(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(age&lt;<span class="number">5</span>)&#123;</span><br><span class="line">    alert(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    alert(<span class="string">&quot;hah&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>while循环，避免程序死循环</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> age = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">while</span>(age&lt;<span class="number">100</span>)&#123;</span><br><span class="line">    age=age+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>for循环</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; things.length; i++) &#123;</span><br><span class="line">		<span class="built_in">console</span>.log(thing[i])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>forEach循环</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> age = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//函数</span></span><br><span class="line">age.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">value</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(value)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>for···in···    得到对应的索引</p>
<p>for···of···    得到对应的值</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> num <span class="keyword">in</span> age)&#123;</span><br><span class="line">	<span class="keyword">if</span>(age.hasOwnProperty(num))&#123;</span><br><span class="line">		<span class="built_in">console</span>.log(age[num]);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> num <span class="keyword">of</span> age)&#123;</span><br><span class="line">	<span class="keyword">if</span>(age.hasOwnProperty(num))&#123;</span><br><span class="line">		<span class="built_in">console</span>.log(num);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>JAVA</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaWeb</title>
    <url>/2021/10/26/JavaWeb/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h1><h2 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h2><p>web开发：</p>
<ul>
<li>web，网页</li>
</ul>
<span id="more"></span>

<ul>
<li><p>静态web</p>
<ul>
<li>html,css</li>
<li>提供给所有人看的数据始终不会发生变化</li>
</ul>
</li>
<li><p>动态web</p>
<ul>
<li>淘宝，几乎所有网站</li>
<li>提供给所有人看的数据始终会发生变化</li>
<li>技术栈：Servlet/JSP，ASP,PHP</li>
</ul>
<p>在java中，动态web资源开发的技术统称维javaweb</p>
</li>
</ul>
<h2 id="web应用程序"><a href="#web应用程序" class="headerlink" title="web应用程序"></a>web应用程序</h2><p>web应用程序：可以提供浏览器访问的程序；</p>
<ul>
<li>a.html、b.html···多个web资源，这些web资源可以被外界访问，对外界提供服务</li>
<li>能访问到的任何一个页面或者资源，都存在于这个世界上某一计算机上</li>
<li>统一的web资源会被放在同一个文件夹下，web应用程序-&gt;Tomcat:服务器</li>
<li>一个web应用由多部份组成<ul>
<li>html,css,js</li>
<li>jsp,servlet</li>
<li>java程序</li>
<li>jar包</li>
<li>配置文件（Properties）</li>
</ul>
</li>
</ul>
<p>web应用程序编写完毕后，若想提供给外界访问：需要一个服务器来统一管理；</p>
<p><img src="/../images/JavaWeb/image-20211026154803740.png"></p>
<h2 id="静态web"><a href="#静态web" class="headerlink" title="静态web"></a>静态web</h2><ul>
<li>*.html,*.htm，这些都是网页的后缀，如果服务器上一直存在这些东西，那么就可以访问</li>
</ul>
<p><img src="/../images/JavaWeb/image-20211026154837911.png"></p>
<h2 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h2><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>默认主机名：localhost-&gt;127.0.0.1</p>
<p><strong>网站是如何访问的</strong></p>
<ol>
<li>输入一个域名</li>
<li>首先检查本机C:\Windows\System32\drivers\etc\hosts配置文件下有没有这个域名映射<ol>
<li>本机有：直接返回对应的ip地址，这个地址中，有需要访问的web程序，则可以直接访问</li>
<li>本机没有：去DNS服务器找，找到的话就返回，找不到就返回找不到</li>
</ol>
</li>
</ol>
<p><img src="/../images/JavaWeb/image-20211028154637751.png" alt="image-20211028154637751"></p>
<h3 id="发布一个web网站"><a href="#发布一个web网站" class="headerlink" title="发布一个web网站"></a>发布一个web网站</h3><blockquote>
<p>将自己写的网站，放到服务器（Tomcat）中指定的web应用的文件夹（webapps）下，就可以访问网站</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">--webapps:Tomcat服务器的web目录</span><br><span class="line">    -ROOT  （默认目录）</span><br><span class="line">    -kuangstudy：网站的目录名</span><br><span class="line">    	-WEB-INF</span><br><span class="line">    		-classes:java程序</span><br><span class="line">            -lib:web应用所依赖的jar包</span><br><span class="line">            -web.xml:网站配置文件</span><br><span class="line">        -index.html：默认的首页</span><br><span class="line">        -<span class="keyword">static</span></span><br><span class="line">        	-css</span><br><span class="line">                -style.css</span><br><span class="line">            -js</span><br><span class="line">            -img</span><br></pre></td></tr></table></figure>

<h2 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h2><h3 id="基本介绍-1"><a href="#基本介绍-1" class="headerlink" title="基本介绍"></a>基本介绍</h3><p>HTTP(超文本传输协议)是一个简单的请求-响应协议，通常运行在TCP之上</p>
<ul>
<li>文本：html，字符串</li>
<li>超文本：图片，音乐，视频，定位，地图</li>
<li>80</li>
</ul>
<p>HTTPS：安全</p>
<ul>
<li>443</li>
</ul>
<h3 id="两个时代"><a href="#两个时代" class="headerlink" title="两个时代"></a>两个时代</h3><ul>
<li>HTTP/1.0:客户端可以与web服务器连接后，只能获得一个web资源，断开连接</li>
<li>HTTP/2.0:k客户端可以与web服务器连接后，能够获得多个web资源</li>
</ul>
<h3 id="HTTP请求"><a href="#HTTP请求" class="headerlink" title="HTTP请求"></a>HTTP请求</h3><blockquote>
<p>客户端–发请求(Request)–服务器</p>
</blockquote>
<p>请求百度：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Request URL: https:<span class="comment">//www.baidu.com/</span></span><br><span class="line">Request Method: GET		get方法/post方法</span><br><span class="line">Status Code: <span class="number">200</span> OK		状态码 <span class="number">200</span> = ok</span><br><span class="line">Remote Address: <span class="number">39.156</span><span class="number">.66</span><span class="number">.18</span>:<span class="number">443</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Accept: text/html</span><br><span class="line">Accept-Encoding: gzip, deflate, br</span><br><span class="line">Accept-Language: zh-CN,zh;q=<span class="number">0.9</span>		语言</span><br><span class="line">Cache-Control: max-age=<span class="number">0</span></span><br><span class="line">Connection: keep-alive</span><br></pre></td></tr></table></figure>

<h4 id="请求行"><a href="#请求行" class="headerlink" title="请求行"></a><strong>请求行</strong></h4><ul>
<li>请求行中的请求方式：GET</li>
<li>请求方式：GET,POST， HEAD,DELETE,PUT,TRACT…<ul>
<li>get:能够携带的参数比较少，大小有限制，会在浏览器的URL地址栏显示数据内容，不安全，但高效</li>
<li>post:能够携带的参数比较多，大小无限制，不会在浏览器的URL地址栏显示数据内容，安全，但不高效</li>
</ul>
</li>
</ul>
<h4 id="消息头"><a href="#消息头" class="headerlink" title="消息头"></a><strong>消息头</strong></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Accept: 支持的数据类型</span><br><span class="line">Accept-Encoding：支持哪种编码格式 GBK	UTF-<span class="number">8</span>	GB2312	ISO8859-<span class="number">1</span></span><br><span class="line">Accept-Language: 语言环境</span><br><span class="line">Cache-Control: 缓存控制</span><br><span class="line">Connection: 请求完成断开还是保持连接</span><br><span class="line">HOST：主机</span><br></pre></td></tr></table></figure>



<h3 id="HTTP响应"><a href="#HTTP响应" class="headerlink" title="HTTP响应"></a>HTTP响应</h3><blockquote>
<p>服务器–响应–客户端</p>
</blockquote>
<p>百度响应：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Cache-Control: <span class="keyword">private</span>		缓存控制</span><br><span class="line">Connection: keep-alive		连接</span><br><span class="line">Content-Encoding: gzip		编码</span><br><span class="line">Content-Type: text/html;charset=utf-<span class="number">8</span>		类型</span><br></pre></td></tr></table></figure>

<h4 id="响应体"><a href="#响应体" class="headerlink" title="响应体"></a>响应体</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Accept: 支持的数据类型</span><br><span class="line">Accept-Encoding：支持哪种编码格式 GBK	UTF-<span class="number">8</span>	GB2312	ISO8859-<span class="number">1</span></span><br><span class="line">Accept-Language: 语言环境</span><br><span class="line">Cache-Control: 缓存控制</span><br><span class="line">Connection: 请求完成断开还是保持连接</span><br><span class="line">HOST：主机</span><br><span class="line">Refresh: 刷新时间</span><br><span class="line">Location：让网页重新定位</span><br></pre></td></tr></table></figure>

<h4 id="响应状态码"><a href="#响应状态码" class="headerlink" title="响应状态码"></a>响应状态码</h4><p>200：请求响应成功</p>
<p>3xx：请求重定向</p>
<ul>
<li>重定向：重新到指定的新位置</li>
</ul>
<p>4xx：找不到资源  404</p>
<ul>
<li>资源不存在</li>
</ul>
<p>5xx：服务器代码错误  500  502（网关错误）</p>
<h2 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h2><p>自动导入和配置jar包</p>
<h3 id="Maven项目架构管理工具"><a href="#Maven项目架构管理工具" class="headerlink" title="Maven项目架构管理工具"></a>Maven项目架构管理工具</h3><p>Maven的核心思想：<strong>约定大于配置</strong></p>
<h3 id="在idea中使用Maven"><a href="#在idea中使用Maven" class="headerlink" title="在idea中使用Maven"></a>在idea中使用Maven</h3><p><img src="/../images/JavaWeb/image-20211101092050977.png" alt="image-20211101092050977"></p>
<p><img src="/../images/JavaWeb/image-20211101092516885.png" alt="image-20211101092516885"></p>
<h3 id="在idea中使用Tomcat"><a href="#在idea中使用Tomcat" class="headerlink" title="在idea中使用Tomcat"></a>在idea中使用Tomcat</h3><p><img src="/../images/JavaWeb/image-20211101105815548.png" alt="image-20211101105815548"></p>
<h2 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h2><h3 id="基本介绍-2"><a href="#基本介绍-2" class="headerlink" title="基本介绍"></a>基本介绍</h3><ul>
<li>Servlet是sun公司开发动态web的一门技术</li>
<li>sun在这些API中提供的一个接口：Servlet，开发一个Servlet程序，只需要两个步骤：<ul>
<li>编写一个类，实现Servlet接口</li>
<li>把开发好的Java类部署到web服务器中</li>
</ul>
</li>
</ul>
<p>实现了Servlet接口的Java程序就叫做Servlet</p>
<h3 id="HelloServlet"><a href="#HelloServlet" class="headerlink" title="HelloServlet"></a>HelloServlet</h3><p> <strong>关于Maven父子工程的理解</strong></p>
<p>父项目：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;modules&gt;</span><br><span class="line">    &lt;<span class="keyword">module</span>&gt;servlet-<span class="number">01</span>&lt;/<span class="keyword">module</span>&gt;</span><br><span class="line">&lt;/modules&gt;</span><br></pre></td></tr></table></figure>

<p>子项目：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;parent&gt;</span><br><span class="line">    &lt;artifactId&gt;javaweb-<span class="number">02</span>-servelet&lt;/artifactId&gt;</span><br><span class="line">    &lt;groupId&gt;com.MizuGo&lt;/groupId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">1.0</span>-SNAPSHOT&lt;/version&gt;</span><br><span class="line">&lt;/parent&gt;</span><br></pre></td></tr></table></figure>

<p><strong>编写一个Servlet程序</strong></p>
<ol>
<li>编写一个普通类</li>
<li>实现Servlet接口，可直接集成HttpServlet</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*java文件夹*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="comment">//由于get或者post只是请求实现的不同的方式，可以相互调用，业务逻辑一样</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//ServletOutputStream outputStream = resp.getOutputStream();</span></span><br><span class="line">        PrintWriter writer = resp.getWriter();<span class="comment">//响应流</span></span><br><span class="line">        writer.print(<span class="string">&quot;hello,Servlet&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>编写Servlet的映射</strong></p>
<p>原因：写的为Java程序，但是要通过浏览器访问，而浏览器需要连接web服务器，所以需要在web服务中注册我们写的Servlet，还需要设置一个浏览器能够访问的路径</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;!--web.xml文件--&gt;</span><br><span class="line">&lt;!--注册Servlet--&gt;</span><br><span class="line">  &lt;servlet&gt;</span><br><span class="line">    &lt;servlet-name&gt;hello&lt;/servlet-name&gt;</span><br><span class="line">    &lt;servlet-<span class="class"><span class="keyword">class</span>&gt;<span class="title">com</span>.<span class="title">servlet</span>.<span class="title">HelloServlet</span>&lt;/<span class="title">servlet</span>-<span class="title">class</span>&gt;//对应的<span class="title">java</span>文件</span></span><br><span class="line"><span class="class">  &lt;/<span class="title">servlet</span>&gt;</span></span><br><span class="line"><span class="class">  &lt;!--<span class="title">Servlet</span>的请求路径--&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">servlet</span>-<span class="title">mapping</span>&gt;</span></span><br><span class="line"><span class="class">  &lt;<span class="title">servlet</span>-<span class="title">name</span>&gt;<span class="title">hello</span>&lt;/<span class="title">servlet</span>-<span class="title">name</span>&gt;//应与上面保持一致</span></span><br><span class="line"><span class="class">  &lt;<span class="title">url</span>-<span class="title">pattern</span>&gt;/<span class="title">hello</span>&lt;/<span class="title">url</span>-<span class="title">pattern</span>&gt;//访问路径</span></span><br><span class="line"><span class="class">&lt;/<span class="title">servlet</span>-<span class="title">mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>配置Tomcat</strong></p>
<blockquote>
<p>PS:此处有个大坑，Tomcat 10修改了包名，在运行的时候首先会加载tomcat自带的servlet-api包，从而导致自己导入的包名与tomcat自带的不一致，报错500</p>
</blockquote>
<h3 id="Servlet运行原理"><a href="#Servlet运行原理" class="headerlink" title="Servlet运行原理"></a>Servlet运行原理</h3><p><img src="/../images/JavaWeb/image-20211102142518178.png" alt="image-20211102142518178"></p>
<h3 id="Mapping问题"><a href="#Mapping问题" class="headerlink" title="Mapping问题"></a>Mapping问题</h3><ol>
<li><p>一个Servlet可以指定一个映射路径</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>一个Servlet可以指定多个映射路径</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello2<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello3<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>一个Servlet可以指定通用映射路径</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>指定一些后缀或者前缀</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>默认请求路径</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>优先级问题</p>
<blockquote>
<p>若已经指定了固定路径，则访问固定路径时不会跳转到通用路径                                </p>
</blockquote>
</li>
</ol>
<h3 id="ServletContext"><a href="#ServletContext" class="headerlink" title="ServletContext"></a>ServletContext</h3><blockquote>
<p>web容器在启动的时候，会为每个web程序都创建一个对应的ServletContext对象，它代表了当前的web应用，Context凌驾于所有的Servlet之上，不同的Servlet之间可以用Context作为中间商交换数据</p>
</blockquote>
<h4 id="共享数据"><a href="#共享数据" class="headerlink" title="共享数据"></a>共享数据</h4><p>在这个Servlet中保存的数据，可以在另外一个servlet中拿到，需要优先访问上传数据的页面，再访问获取数据的页面，否则会导致无数据</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*HelloServlet.java</span></span><br><span class="line"><span class="comment">*将数据上传到Context</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        String username = <span class="string">&quot;yurui&quot;</span>;</span><br><span class="line">         ServletContext servletContext = <span class="keyword">this</span>.getServletContext();</span><br><span class="line">         servletContext.setAttribute(<span class="string">&quot;username&quot;</span>,username);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*GetServlet.java</span></span><br><span class="line"><span class="comment">*获取Context中的数据</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    ServletContext servletContext = <span class="keyword">this</span>.getServletContext();</span><br><span class="line">    String username = (String)servletContext.getAttribute(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">    resp.getWriter().print(<span class="string">&quot;user&quot;</span>+username);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.servlet.HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>get<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.servlet.GetServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>get<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/get<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="获取初始化参数"><a href="#获取初始化参数" class="headerlink" title="获取初始化参数"></a>获取初始化参数</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*ParmaServlet.java</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    ServletContext servletContext = <span class="keyword">this</span>.getServletContext();</span><br><span class="line">    String url = servletContext.getInitParameter(<span class="string">&quot;url&quot;</span>);<span class="comment">//对应xml文件中初始化参数的名字</span></span><br><span class="line">    resp.getWriter().print(url);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>url<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>jdbc:mysql://localhost:3306/mybatis<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>gp<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.servlet.ParamServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>gp<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/gp<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="请求转发"><a href="#请求转发" class="headerlink" title="请求转发"></a>请求转发</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*ServletDemo.java</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    ServletContext servletContext = <span class="keyword">this</span>.getServletContext();</span><br><span class="line">    servletContext.getRequestDispatcher(<span class="string">&quot;/gp&quot;</span>).forward(req,resp);<span class="comment">//转向路径</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*ParamServlet.java</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    ServletContext servletContext = <span class="keyword">this</span>.getServletContext();</span><br><span class="line">    String url = servletContext.getInitParameter(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">    resp.getWriter().print(url);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>gp<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.servlet.ParamServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>gp<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/gp<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>demo<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.servlet.ServletDemo<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>demo<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/demo<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>请求转发流程图：</p>
<p><img src="/../images/JavaWeb/image-20211104142038940.png" alt="image-20211104142038940"></p>
<blockquote>
<p>A请求C的数据</p>
<p>先访问B，由B转发来自A的请求到C，拿到C的数据后再经过B返回给A（在这个过程中，域名不会改变）</p>
</blockquote>
<p>重定向流程图：</p>
<p><img src="/../images/JavaWeb/image-20211104143225421.png" alt="image-20211104143225421"></p>
<blockquote>
<p>A请求C的数据</p>
<p>先访问B，B返回信息给A数据应该在C处，A收到来自B的信息再去访问C（在这个过程中，域名会发生改变）</p>
</blockquote>
<blockquote>
<p><strong>请求转发和重定向的区别</strong></p>
<p>相同点</p>
<ul>
<li>页面都会跳转</li>
</ul>
<p>不同点</p>
<ul>
<li>请求转发的时候，url不会产生变化  307<ul>
<li>重定向时候，url地址栏会发生变化  302</li>
</ul>
</li>
</ul>
</blockquote>
<h4 id="读取资源文件"><a href="#读取资源文件" class="headerlink" title="读取资源文件"></a>读取资源文件</h4><p>Properties</p>
<ul>
<li>在java目录下新建properties</li>
<li>在resources目录下新建properties</li>
</ul>
<p>发现都被打包到了同一个路径下：classes，俗称为classpath</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*ServletDemo2.java</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    ServletContext servletContext = <span class="keyword">this</span>.getServletContext();</span><br><span class="line">    InputStream in = servletContext.getResourceAsStream(<span class="string">&quot;/WEB-INF/classes/db.properties&quot;</span>);<span class="comment">//相对路径，/代表当前项目目录</span></span><br><span class="line">    Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">    properties.load(in);<span class="comment">//读取流文件</span></span><br><span class="line">    String username = properties.getProperty(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">    String type = properties.getProperty(<span class="string">&quot;type&quot;</span>);</span><br><span class="line">    resp.getWriter().print(<span class="string">&quot;&lt;font style=&#x27;color:red;font-size:60px&#x27;&gt;&quot;</span>+username+<span class="string">&quot;&lt;/font&gt;&quot;</span>);</span><br><span class="line">    resp.getWriter().print(type);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>properties文件往往放在resources文件夹下，如果放在java文件夹下可能会导致导出失败</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--需要在该项目的pom.xml文件下添加如下代码--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--在build中配置resources，来防止我们资源导出失败的问题--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>打印信息可以添加要打印的相应格式，并以字符串的形式将其连接起来</p>
</blockquote>
<h3 id="HttpServletResponse"><a href="#HttpServletResponse" class="headerlink" title="HttpServletResponse"></a>HttpServletResponse</h3><p>web服务器接收到客户端的http请求，针对这个请求，分别创建一个代表请求的HttpServletRequest对象，代表响应的一个HttpServletRequest</p>
<ul>
<li>如果要获取客户端请求过来的参数：找HttpServletRequest</li>
<li>如果要获取客户端响应一些信息：找HttpServletResponse</li>
</ul>
<h4 id="简单分类"><a href="#简单分类" class="headerlink" title="简单分类"></a>简单分类</h4><p><strong>负责向浏览器发送数据的方法</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function">ServletOutputStream <span class="title">getOutputStream</span><span class="params">()</span> <span class="keyword">throws</span> IOException</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">PrintWriter <span class="title">getWriter</span><span class="params">()</span> <span class="keyword">throws</span> IOException</span>;</span><br></pre></td></tr></table></figure>

<p><strong>负责向浏览器发送响应头的方法</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setCharacterEncoding</span><span class="params">(String var1)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setContentLength</span><span class="params">(<span class="keyword">int</span> var1)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setContentLengthLong</span><span class="params">(<span class="keyword">long</span> var1)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setContentType</span><span class="params">(String var1)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setDateHeader</span><span class="params">(String var1, <span class="keyword">long</span> var2)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addDateHeader</span><span class="params">(String var1, <span class="keyword">long</span> var2)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setHeader</span><span class="params">(String var1, String var2)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addHeader</span><span class="params">(String var1, String var2)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setIntHeader</span><span class="params">(String var1, <span class="keyword">int</span> var2)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addIntHeader</span><span class="params">(String var1, <span class="keyword">int</span> var2)</span></span>;</span><br></pre></td></tr></table></figure>

<h4 id="常见应用"><a href="#常见应用" class="headerlink" title="常见应用"></a>常见应用</h4><ol>
<li>向浏览器输出消息    </li>
<li>下载文件<ol>
<li>要获取下载文件的路径</li>
<li>下载的文件名</li>
<li>设置让浏览器能够支持下载所需的东西</li>
<li>获取下载文件的输入流</li>
<li>创建缓冲区</li>
<li>获取OutputStream</li>
<li>将FileOutputStream流写入到buffer缓冲区</li>
<li>使用OutputStream将缓冲区中的数据输出到客户端</li>
</ol>
</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*FileServlet.java</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">//1. 要获取下载文件的路径</span></span><br><span class="line">        String realPath = <span class="string">&quot;D:\\java-1.0-maven\\response\\target\\response\\WEB-INF\\classes\\1.pdf&quot;</span>;</span><br><span class="line"><span class="comment">//2. 下载的文件名</span></span><br><span class="line">       String filename = realPath.substring(realPath.lastIndexOf(<span class="string">&quot;\\&quot;</span>)+<span class="number">1</span>);<span class="comment">//lastIndexOf能够取到最后一次出现该字符的位置</span></span><br><span class="line"><span class="comment">//3. 设置让浏览器能够支持下载所需的东西</span></span><br><span class="line">        resp.setHeader(<span class="string">&quot;Content-Disposition&quot;</span>,<span class="string">&quot;attachment;filename=&quot;</span>+filename);</span><br><span class="line"><span class="comment">//4. 获取下载文件的输入流</span></span><br><span class="line">        FileInputStream in = <span class="keyword">new</span> FileInputStream(realPath);</span><br><span class="line"><span class="comment">//5. 创建缓冲区</span></span><br><span class="line">   <span class="keyword">int</span> len=<span class="number">0</span>;</span><br><span class="line">   <span class="keyword">byte</span> [] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line"><span class="comment">//6. 获取OutputStream</span></span><br><span class="line">        ServletOutputStream out = resp.getOutputStream();</span><br><span class="line"><span class="comment">//7. 将FileOutputStream流写入到buffer缓冲区,使用OutputStream将缓冲区中的数据输出到客户端</span></span><br><span class="line">        <span class="keyword">while</span>((len=in.read(buffer))&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            out.write(buffer,<span class="number">0</span>,len);</span><br><span class="line">        &#125;</span><br><span class="line">    in.close();</span><br><span class="line">    out.close();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h4 id="实现重定向"><a href="#实现重定向" class="headerlink" title="实现重定向"></a>实现重定向</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*RedirectServlet.java</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    resp.sendRedirect(<span class="string">&quot;/res/down&quot;</span>);<span class="comment">//res是服务器带有的路径</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>file<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.servlet.FileServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>file<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/down<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>red<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.servlet.RedirectServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>red<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/red<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>

<hr>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    resp.sendRedirect(<span class="string">&quot;/res/success.jsp&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>req<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.servlet.RequestTest<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>req<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/login<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;%--$&#123;pageContext.request.contextPath&#125;代表当前的项目--%&gt;</span><br><span class="line">&lt;form action=&quot;$&#123;pageContext.request.contextPath&#125;/login&quot; method=&quot;get&quot;&gt;</span><br><span class="line">    用户名：&lt;input type=&quot;text&quot; name=&quot;username&quot;&gt; &lt;br&gt;</span><br><span class="line">    密码：&lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;&lt;br&gt;</span><br><span class="line">    &lt;input type=&quot;submit&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure>

<p><img src="/../images/JavaWeb/image-20211106100242239.png" alt="image-20211106100242239"></p>
<h3 id="HttpServletRequest"><a href="#HttpServletRequest" class="headerlink" title="HttpServletRequest"></a>HttpServletRequest</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*LoginServlet.java</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    req.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">    resp.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">    String[] parameterValues = req.getParameterValues(<span class="string">&quot;hobbys&quot;</span>);</span><br><span class="line">    String username = req.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">    String password = req.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">    <span class="comment">//后台接收中文乱码问题</span></span><br><span class="line">    System.out.println(username);</span><br><span class="line">    System.out.println(password);</span><br><span class="line">    System.out.println(Arrays.toString(parameterValues));</span><br><span class="line">    <span class="comment">//这里的/代表当前的web应用</span></span><br><span class="line">    req.getRequestDispatcher(<span class="string">&quot;/success.jsp&quot;</span>).forward(req,resp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;%--index.jsp--%&gt;</span><br><span class="line">&lt;div style=&quot;text-align: center&quot;&gt;</span><br><span class="line">    &lt;form action=&quot;$&#123;pageContext.request.contextPath&#125;/login&quot; method=&quot;post&quot;&gt;</span><br><span class="line">        用户名：&lt;input type=&quot;text&quot; name=&quot;username&quot;&gt;&lt;br&gt;</span><br><span class="line">        密码：&lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;&lt;br&gt;</span><br><span class="line">        爱好:</span><br><span class="line">        &lt;input type=&quot;checkbox&quot; name=&quot;hobbys&quot; value=&quot;电影&quot;&gt;电影</span><br><span class="line">        &lt;input type=&quot;checkbox&quot; name=&quot;hobbys&quot; value=&quot;唱歌&quot;&gt;唱歌</span><br><span class="line">        &lt;input type=&quot;checkbox&quot; name=&quot;hobbys&quot; value=&quot;跳舞&quot;&gt;跳舞</span><br><span class="line">        &lt;br&gt;</span><br><span class="line">        &lt;input type=&quot;submit&quot;&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<h2 id="Cookie、Session"><a href="#Cookie、Session" class="headerlink" title="Cookie、Session"></a>Cookie、Session</h2><h3 id="会话"><a href="#会话" class="headerlink" title="会话"></a>会话</h3><p><strong>概念</strong></p>
<p>用户打开一个浏览器，点击了很多超链接，访问多个web资源，关闭浏览器，这个过程可以称为会话</p>
<p><strong>有状态会话</strong></p>
<p>一个人去到一个地方，留下了足迹，下次再去到这个地方，其他人知道他已经来过的情况</p>
<blockquote>
<p><strong>证明访问过一个网站</strong></p>
<p>cookie：服务端给客户端一个信件，客户端下次访问服务端带上信件即可</p>
<p>session：服务器登记访问过这个网站了，下次再来的时候由服务器来匹配访问的人</p>
</blockquote>
<h3 id="保存会话的两种技术"><a href="#保存会话的两种技术" class="headerlink" title="保存会话的两种技术"></a>保存会话的两种技术</h3><p>cookie</p>
<ul>
<li>客户端技术（响应，请求）</li>
</ul>
<p>session</p>
<ul>
<li>服务器技术，利用这个技术，可以保存用户的会话信息，我们可以把信息和数据放在session</li>
</ul>
<h3 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h3><ol>
<li>从请求中拿到cookie信息</li>
<li>服务器响应给客户端cookie</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Cookie[] cookies = req.getCookies();<span class="comment">//获得cookie</span></span><br><span class="line">cookie.getName()；<span class="comment">//获得cookie中的key</span></span><br><span class="line">cookie.getValue()；<span class="comment">//获得cookie中的value</span></span><br><span class="line"><span class="keyword">new</span> Cookie(<span class="string">&quot;lastTime&quot;</span>,System.currentTimeMillis()+<span class="string">&quot;&quot;</span>);<span class="comment">//创建一个新的cookie</span></span><br><span class="line">cookie.setMaxAge(<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>);<span class="comment">//设置cookie的有效期为一天</span></span><br><span class="line">resp.addCookie(cookie);<span class="comment">//响应给客户端一个cookie</span></span><br></pre></td></tr></table></figure>

<blockquote>
<ul>
<li>一个Cookie只能保存一个信息</li>
<li>一个web站点可以给浏览器发送多个cookie，最多存放20个cookie</li>
<li>Cookie大小有限制：4kb</li>
<li>300个cookie为浏览器上限</li>
</ul>
</blockquote>
<p><strong>删除Cookie</strong></p>
<ul>
<li>不设置有效期，关闭浏览器则自动失效</li>
<li>设置有效期时间为0；</li>
</ul>
<p><strong>编码解码</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">URLEncoder.encode(<span class="string">&quot;中文&quot;</span>,<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">URLDecoder.decode(cookie.getValue(),<span class="string">&quot;utf-8&quot;</span>);</span><br></pre></td></tr></table></figure>

<h3 id="Session-重点"><a href="#Session-重点" class="headerlink" title="Session(重点)"></a>Session(重点)</h3><p><strong>概念</strong></p>
<ul>
<li>服务器会给每个用户（浏览器）创建一个Session对象</li>
<li>一个Session独占一个浏览器，只要浏览器没有关闭，这个Session就存在</li>
<li>用户登录之后哦，整个网站都可以访问；-&gt;保存用户信息；保存购物车信息</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//得到Session</span></span><br><span class="line">HttpSession session = req.getSession();</span><br><span class="line"><span class="comment">//给Session中存东西</span></span><br><span class="line">session.setAttribute(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;yr&quot;</span>);</span><br><span class="line"><span class="comment">//获取Session的id</span></span><br><span class="line">String id = session.getId();</span><br><span class="line"><span class="comment">//判断session是不是新创建</span></span><br><span class="line">session.isNew();</span><br><span class="line"><span class="comment">//从Session中取东西</span></span><br><span class="line">session.getAttribute(<span class="string">&quot;name&quot;</span>);</span><br></pre></td></tr></table></figure>

<p><strong>两种注销方式</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--xml中设置失效方式--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--设置Session默认的失效时间--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">session-config</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--1分钟后Session自动失效，以分钟为单位--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">session-timeout</span>&gt;</span>1<span class="tag">&lt;/<span class="name">session-timeout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">session-config</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//java中注销方式</span></span><br><span class="line"><span class="comment">//手动注销session</span></span><br><span class="line">session.invalidate();</span><br></pre></td></tr></table></figure>

<blockquote>
<p>Session和Cookie区别</p>
<ul>
<li>Cookie是把用户的数据写给用户的浏览器，浏览器保存（可以保存多个）</li>
<li>Session把用户的数据写到用户独占Session中，服务器端保存（保存重要的信息，减少资源</li>
<li>Session对象由服务创建</li>
</ul>
</blockquote>
<p><strong>使用场景</strong></p>
<ul>
<li>保存一个登录用户的信息</li>
<li>购物车信息</li>
<li>在整个网站中经常会使用的数据，我们将它保存在Session中</li>
</ul>
]]></content>
      <tags>
        <tag>JAVA</tag>
      </tags>
  </entry>
  <entry>
    <title>SVN基本介绍及操作</title>
    <url>/2021/09/05/SVN%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D%E5%8F%8A%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><ul>
<li>repository（源代码库）：源代码统一存放的地方</li>
<li>Checkout（提取）：没有源代码的情况下，需要从repository Checkout一份</li>
</ul>
<span id="more"></span>

<ul>
<li>Commit（提交）：修改代码后，需要Commit到repository</li>
<li>Update（更新）：Checkout源代码后，Update可以将所提取到的源代码与源代码库的代码同步</li>
</ul>
<p>日常开发基本流程：</p>
<p>​        Checkout完一份源代码后（手中得到了一份初始的代码）–&gt;工作几天后（此时源代码可能已经被其他人改变）–&gt;Update（将自己手中的源代码更新为最新版本）–&gt;自己对代码进行修改并完成调试工作–&gt;Commit（上传自己的源代码到源代码库，此时其他人可以看到所完成的修改）</p>
<p>PS：同时对一个文件进行修改时，SVN可以合并多个人的改动，但是当多个人对同一行程序进行了修改，SVN会提示文件Conflict冲突，此时需要手动确认</p>
<h3 id="软连接与硬连接"><a href="#软连接与硬连接" class="headerlink" title="软连接与硬连接"></a>软连接与硬连接</h3><p>​            Linux的文件系统中，磁盘分区中的文件都有自己的编号，称为索引节点号inode。</p>
<h4 id="硬连接"><a href="#硬连接" class="headerlink" title="硬连接"></a>硬连接</h4><ul>
<li>连接文件的属性与原文件完全一样</li>
<li>与原文件的关系类似于：复制+同步更新</li>
<li>原文件丢失后，硬连接文件同样可以访问</li>
<li>不能跨分区，不能针对目录使用</li>
<li>创建硬连接不会建立inode，只会在文件原来的inode link count域+1，当硬连接被删除的时候，系统会检查inode link count的值，当值大于等于1，inode不会被回收，即文件的内容不会被删除</li>
</ul>
<h4 id="软连接"><a href="#软连接" class="headerlink" title="软连接"></a>软连接</h4><ul>
<li>即符号连接，本质就是建立一个新的文件，用来指向别的文件（类似于windows的快捷方式）</li>
<li>删除了这个文件即等同于删除了这个连接，但是原文件并不会消失</li>
<li>若删除了连接所指向的文件，则会导致软连接不可用</li>
<li>创建软连接会重新建立一个inode，它的结构与其他文件不一样，只是一个指明源文件的字符串信息</li>
</ul>
<p>SVN建立分支与标签的方法，就只是复制该项目，使用的方法就类似于硬链接。因此这些操作花费很小，而且是固定的时间。</p>
<h2 id="SVN生命周期"><a href="#SVN生命周期" class="headerlink" title="SVN生命周期"></a>SVN生命周期</h2><h3 id="创建版本库"><a href="#创建版本库" class="headerlink" title="创建版本库"></a>创建版本库</h3><p>​        版本库相当于一个集中的空间，用于存放所有开发者的工作成果，不仅能够存放文件，还包括了每次修改的历史</p>
<h3 id="检出"><a href="#检出" class="headerlink" title="检出"></a>检出</h3><p>​        Checkout操作是用来从版本库创建一个工作副本，工作副本是开发者私人的工作空间，个人对其进行内容的修改后，可以提交到版本库中</p>
<h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><p>​        Update操作会将个人的工作副本与版本库进行同步（版本库在别人提交了他们的改动后，其他人的工作副本将会过期）。</p>
<h3 id="执行变更"><a href="#执行变更" class="headerlink" title="执行变更"></a>执行变更</h3><p>​        当检出（Checkout）后，很多操作都可以执行变更。</p>
<ul>
<li>编辑（添加、删除）</li>
<li>Rename更改文件/目录名字</li>
<li>移动</li>
</ul>
<h3 id="复查变化"><a href="#复查变化" class="headerlink" title="复查变化"></a>复查变化</h3><p>​        当完成检出的那一刻直至其他人提交前或者更新工作副本后，工作副本与版本库完全同步。在Commit操作之前往往需要复查自己的修改。</p>
<p>​        Status：提供一个变动列表，但是并不提供变动的详细信息</p>
<p>​        diff：查看变动的详细信息</p>
<h3 id="修改错误"><a href="#修改错误" class="headerlink" title="修改错误"></a>修改错误</h3><p>​        Revert：重置对工作副本的修改。可以充值一个或者多个文件/目录。同样也可以重置整个工作副本，这种情况下，revert操作将会销毁待变更列表并将工作副本恢复到原始状态。</p>
<h3 id="解决冲突"><a href="#解决冲突" class="headerlink" title="解决冲突"></a>解决冲突</h3><p>​        Merge：自动处理可以安全合并的东西，其它的则会被当做冲突。冲突的情况需要人为处理</p>
<p>​        Resolve：帮助用户找出冲突并告诉版本库如何处理这些冲突</p>
<h3 id="提交更改"><a href="#提交更改" class="headerlink" title="提交更改"></a>提交更改</h3><p>​        Commit：将更改从工作副本提交到版本库。这个操作将会修改版本库的内容，其他开发者可以通过更新他们的工作副本来查看这些修改。</p>
<p>​        提交前，需要将文件/目录添加到待变更列表中（列表中记录了将会被提交的改动）</p>
<p>PS：Commit是一个原子操作，要么完全提交成功，要么失败回滚，不会出现成功提交一半的情况。</p>
<h2 id="TortoiseSVN使用"><a href="#TortoiseSVN使用" class="headerlink" title="TortoiseSVN使用"></a>TortoiseSVN使用</h2><h3 id="建立工作目录"><a href="#建立工作目录" class="headerlink" title="建立工作目录"></a>建立工作目录</h3><ol>
<li>建立工作目录</li>
<li>SVN checkout，填入repository（版本库）的位置，对于SVN来说，repository位置即是URL</li>
</ol>
<h3 id="新增档案及目录到Repository中"><a href="#新增档案及目录到Repository中" class="headerlink" title="新增档案及目录到Repository中"></a>新增档案及目录到Repository中</h3><ol>
<li>将所需要新增的档案add到Repository（此时并没有真正完成新增，只是告知SVN准备要放入这些档案</li>
<li>选择Commit（提交）</li>
</ol>
<h3 id="更新档案及目录Update"><a href="#更新档案及目录Update" class="headerlink" title="更新档案及目录Update"></a>更新档案及目录Update</h3><ol>
<li>在想要更新的档案或者目录选择SVN Update</li>
<li>若需要回溯到特定的日期或者版本，选择Update to revision</li>
</ol>
<h3 id="复制档案及目录branch"><a href="#复制档案及目录branch" class="headerlink" title="复制档案及目录branch"></a>复制档案及目录branch</h3><ol>
<li>当需要一个复制的目录用于修改，等到确定这个分支已经修改完毕了，再合并到原来的主要开发版本，即可用到branch</li>
<li>在想要建立分支的地方选择branch，填写完相关信息完成分支创建，需要SVN Update操作后才能看到新增的目录（新增的目录与原来的目录无关，直至选择将branch merge回原来的主干</li>
</ol>
<h3 id="合并动作merge"><a href="#合并动作merge" class="headerlink" title="合并动作merge"></a>合并动作merge</h3><ol>
<li>选择需要合并的分支点击Merge即可</li>
</ol>
<h3 id="制作Tag或者Release"><a href="#制作Tag或者Release" class="headerlink" title="制作Tag或者Release"></a>制作Tag或者Release</h3><ol>
<li>Tag或Release就是一个特别的版本，Tag与Release的作法和Branch完全相同，区别在于Branch可能需要merge回原来的主干，而tag及release大部分都不需要merge回原来的主干</li>
<li>Tag或者Release同样需要Update后才能显示出来</li>
</ol>
<p>​    </p>
]]></content>
      <tags>
        <tag>SVN</tag>
      </tags>
  </entry>
  <entry>
    <title>关于Android项目过程中的一些认识</title>
    <url>/2021/01/19/%E5%85%B3%E4%BA%8EAndroid%E9%A1%B9%E7%9B%AE%E8%BF%87%E7%A8%8B%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%A4%E8%AF%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>写在前面：</p>
<p>​        Android Studio升级到4.1后，之前很多的包都不可用了，需要寻找其他办法。</p>
<span id="more"></span>

<p> Android Studio 3.4推出了AndroidX要取代原来的support库。创建新项目的时候，如果没有勾选“Use androidx.* artifacts”，那么导入外部模块不会报错；只有勾选了“Use androidx.* artifacts”，导入外部模块才会报上面的错。勾选界面如下图所示：</p>
<p><img src="/../images/%E5%85%B3%E4%BA%8EAndroid%E9%A1%B9%E7%9B%AE%E8%BF%87%E7%A8%8B%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%A4%E8%AF%86/Androidx.png"></p>
<p>如果已经勾选了“Use androidx.* artifacts”，可以在gradle.properties目录下更改信息，如下图：</p>
<p><img src="/../images/%E5%85%B3%E4%BA%8EAndroid%E9%A1%B9%E7%9B%AE%E8%BF%87%E7%A8%8B%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%A4%E8%AF%86/image-20210120154553213.png"></p>
<p>详细的support依赖库的新旧对应关系见下表：</p>
<table>
<thead>
<tr>
<th><strong>支持库的旧路径</strong></th>
<th><strong>支持库的新路径</strong></th>
</tr>
</thead>
<tbody><tr>
<td>com.android.support.constraint:constraint-layout</td>
<td>androidx.constraintlayout:constraintlayout:1.1.2</td>
</tr>
<tr>
<td>com.android.support.test.espresso:espresso-core</td>
<td>androidx.test.espresso:espresso-core:3.1.0</td>
</tr>
<tr>
<td>com.android.support.test:runner</td>
<td>androidx.test: runner:1.1.0</td>
</tr>
<tr>
<td>com.android.support:appcompat-v7</td>
<td>androidx.appcompat:appcompat:1.0.0</td>
</tr>
<tr>
<td>com.android.support:cardview-v7</td>
<td>androidx.cardview:cardview:1.0.0</td>
</tr>
<tr>
<td>com.android.support:design</td>
<td>com.google.android.material:material:1.0.0-rc01</td>
</tr>
<tr>
<td>com.android.support:multidex</td>
<td>androidx.multidex:multidex:2.0.0</td>
</tr>
<tr>
<td>com.android.support:palette-v7</td>
<td>androidx.palette:palette:1.0.0</td>
</tr>
<tr>
<td>com.android.support:recyclerview-v7</td>
<td>androidx.recyclerview:recyclerview:1.0.0</td>
</tr>
<tr>
<td>com.android.support:support-v4</td>
<td>androidx.legacy:legacy-support-v4:1.0.0</td>
</tr>
</tbody></table>
<p>详细的support控件的新旧对应关系见下表：</p>
<table>
<thead>
<tr>
<th>支持控件的旧包名</th>
<th align="left">支持控件的新包名</th>
</tr>
</thead>
<tbody><tr>
<td>android.support.v4.app.Fragment</td>
<td align="left">androidx.fragment.app.Fragment</td>
</tr>
<tr>
<td>android.support.v4.app.FragmentActivity</td>
<td align="left">androidx.fragment.app.FragmentActivity</td>
</tr>
<tr>
<td>android.support.v4.app.FragmentManager</td>
<td align="left">androidx.fragment.app.FragmentManager</td>
</tr>
<tr>
<td>android.support.v4.app.FragmentPagerAdapter</td>
<td align="left">androidx.fragment.app.FragmentPagerAdapter</td>
</tr>
<tr>
<td>android.support.v4.view.ViewPager</td>
<td align="left">androidx.viewpager.widget.ViewPager</td>
</tr>
<tr>
<td>android.support.v4.view.PagerAdapter</td>
<td align="left">androidx.viewpager.widget.PagerAdapter</td>
</tr>
<tr>
<td>android.support.v4.view.PagerTabStrip</td>
<td align="left">androidx.viewpager.widget.PagerTabStrip</td>
</tr>
<tr>
<td>android.support.v4.view.PagerTitleStrip</td>
<td align="left">androidx.viewpager.widget.PagerTitleStrip</td>
</tr>
<tr>
<td>android.support.v7.app.AppCompatActivity</td>
<td align="left">androidx.appcompat.app.AppCompatActivity</td>
</tr>
<tr>
<td>android.support.v7.widget.Toolbar</td>
<td align="left">androidx.appcompat.widget.Toolbar</td>
</tr>
<tr>
<td>android.support.v7.widget.RecyclerView</td>
<td align="left">androidx.recyclerview.widget.RecyclerView</td>
</tr>
<tr>
<td>android.support.v7.widget.GridLayoutManager</td>
<td align="left">androidx.recyclerview.widget.GridLayoutManager</td>
</tr>
<tr>
<td>android.support.v7.widget.LinearLayoutManager</td>
<td align="left">androidx.recyclerview.widget.LinearLayoutManager</td>
</tr>
<tr>
<td>android.support.v7.widget.StaggeredGridLayoutManager</td>
<td align="left">androidx.recyclerview.widget.StaggeredGridLayoutManager</td>
</tr>
<tr>
<td>android.support.v7.widget.CardView</td>
<td align="left">androidx.cardview.widget.CardView</td>
</tr>
<tr>
<td>android.support.v7.graphics.Palette</td>
<td align="left">androidx.palette.graphics.Palette</td>
</tr>
</tbody></table>
<h2 id="Android项目流程"><a href="#Android项目流程" class="headerlink" title="Android项目流程"></a>Android项目流程</h2><p> 从个人理解的角度来说：</p>
<p>​         一个项目的最开始的一步应该是框架的搭建，确定好项目的各个模块的功能。</p>
<p>​         先设想好自己所要实现的功能，将Java代码实现，然后根据Java代码完成xml代码的设计。</p>
<h2 id="Banner相关的一些认识"><a href="#Banner相关的一些认识" class="headerlink" title="Banner相关的一些认识"></a>Banner相关的一些认识</h2><h2 id="Glide相关的一些认识"><a href="#Glide相关的一些认识" class="headerlink" title="Glide相关的一些认识"></a>Glide相关的一些认识</h2><h2 id="Adapter相关的一些认识"><a href="#Adapter相关的一些认识" class="headerlink" title="Adapter相关的一些认识"></a>Adapter相关的一些认识</h2><h2 id="Bean相关的一些认识"><a href="#Bean相关的一些认识" class="headerlink" title="Bean相关的一些认识"></a>Bean相关的一些认识</h2><h2 id="Gson相关的一些认识"><a href="#Gson相关的一些认识" class="headerlink" title="Gson相关的一些认识"></a>Gson相关的一些认识</h2><p>​         首先需要导入Gson的第三方包，且由于Android Studio 4.1无GsonFormat的插件，只能用SGsonFormat代替使用，在操作上基本上一致。</p>
<p>​        将所要解析的数据导入SGson中进行解析会自动得到类中方法。        </p>
<p>下图为json数据解析的具体流程：</p>
<p><img src="/../images/%E5%85%B3%E4%BA%8EAndroid%E9%A1%B9%E7%9B%AE%E8%BF%87%E7%A8%8B%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%A4%E8%AF%86/image-20210202152418181.png"></p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>关于Toast的那些事</title>
    <url>/2021/01/17/%E5%85%B3%E4%BA%8EToast%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="1-最基本的Toast"><a href="#1-最基本的Toast" class="headerlink" title="1.最基本的Toast"></a>1.最基本的Toast</h2><p>系统自带Toast采用的是队列的方式， 等当前Toast消失后， 下一个Toast才能显示出来；原因是Toast的管理是在队列中，点击一次，就会产生一个新的Toast，要等这个队列中的Toast处理完，这个显示Toast的任务才算结束。 so~ 我们可以把Toast改成单例模式，没有Toast再新建它，这样也就解决了连续点击Toast，一直在显示的问题。</p>
<span id="more"></span>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Toast.makeText(Context,<span class="string">&quot;最基本的Toast&quot;</span>,Toast.LENGTH_SHORT).show();</span><br></pre></td></tr></table></figure>



<h2 id="2-自定义位置的Toast"><a href="#2-自定义位置的Toast" class="headerlink" title="2.自定义位置的Toast"></a>2.自定义位置的Toast</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Toast.makeText(Context,<span class="string">&quot;自定义位置的Toast&quot;</span>,Toast.LENGTH_SHORT);</span><br><span class="line">toast.setGravity(Gravity.LEFT,<span class="number">50</span>,<span class="number">0</span>);              </span><br><span class="line">toast.show();</span><br></pre></td></tr></table></figure>



<h2 id="3-自定义布局（带图片）的Toast"><a href="#3-自定义布局（带图片）的Toast" class="headerlink" title="3.自定义布局（带图片）的Toast"></a>3.自定义布局（带图片）的Toast</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Toast customToast = <span class="keyword">new</span> Toast(MainActivity.<span class="keyword">this</span>.getApplicationContext());</span><br><span class="line"> <span class="comment">//获得view的布局</span></span><br><span class="line">View customView = LayoutInflater.from(MainActivity.<span class="keyword">this</span>).inflate(R.layout.custom_toast,<span class="keyword">null</span>);</span><br><span class="line">ImageView img = (ImageView) customView.findViewById(R.id.iv);</span><br><span class="line">TextView tv = (TextView) customView.findViewById(R.id.tv);</span><br><span class="line">  <span class="comment">//设置ImageView的图片</span></span><br><span class="line">img.setBackgroundResource(R.drawable.ab);</span><br><span class="line">  <span class="comment">//设置textView中的文字</span></span><br><span class="line">tv.setText(<span class="string">&quot;我是带图片的自定义位置的toast&quot;</span>);</span><br><span class="line">  <span class="comment">//设置toast的View,Duration,Gravity最后显示</span></span><br><span class="line">customToast.setView(customView);</span><br><span class="line">customToast.setDuration(Toast.LENGTH_SHORT);</span><br><span class="line">customToast.setGravity(Gravity.CENTER,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">customToast.show();</span><br></pre></td></tr></table></figure>



<h2 id="4-自定义带动画效果的Toast控件"><a href="#4-自定义带动画效果的Toast控件" class="headerlink" title="4.自定义带动画效果的Toast控件"></a>4.自定义带动画效果的Toast控件</h2><p>其实，这个就是3.带图片的toast的加强版。将里面其中的图片，改换成我们自定义的view，通过自定义view,来实现多种多样的Toast.<br>1.创建自定义的view.CustomToastView继承View.<br>整体的Custom的结构（下文会有具体实现代码）：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomToastView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</span><br><span class="line">   <span class="comment">//a.初始化其中的一些变量。</span></span><br><span class="line">   ......</span><br><span class="line">   <span class="comment">//a.实现CustomToastView的3个构造函数</span></span><br><span class="line">   ......</span><br><span class="line">   <span class="comment">//b.初始化画笔的参数和矩形参数</span></span><br><span class="line">   .....</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;<span class="number">1234567891011</span></span><br></pre></td></tr></table></figure>

<p>a.初始化其中的一些变量，实现3个构造函数。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomToastView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</span><br><span class="line">     <span class="comment">//矩形，设置toast布局时用</span></span><br><span class="line">    RectF rectF =<span class="keyword">new</span> RectF();</span><br><span class="line">    <span class="comment">//属性动画</span></span><br><span class="line">    ValueAnimator valueAnimator;</span><br><span class="line">    <span class="keyword">float</span> mAnimatedValue = <span class="number">0f</span>;</span><br><span class="line">    <span class="comment">//自定义view的画笔</span></span><br><span class="line">    <span class="keyword">private</span> Paint mPaint;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> mWidth = <span class="number">0f</span>; <span class="comment">//view的宽</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> mEyeWidth = <span class="number">0f</span>; <span class="comment">//笑脸的眼睛半径</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> mPadding = <span class="number">0f</span>;  <span class="comment">//view的偏移量。</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> endAngle = <span class="number">0f</span>; <span class="comment">//圆弧结束的度数</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//是左眼还是右眼</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> isSmileLeft = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> isSmileRight = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CustomToastView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CustomToastView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CustomToastView</span><span class="params">(Context context, AttributeSet attrs, <span class="keyword">int</span> defStyleAttr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs, defStyleAttr);</span><br><span class="line">    &#125;</span><br><span class="line">    .......</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>b.设置画笔的参数以及矩形的参数。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initPaint</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       mPaint = <span class="keyword">new</span> Paint();</span><br><span class="line">       mPaint.setAntiAlias(<span class="keyword">true</span>);</span><br><span class="line">       mPaint.setStyle(Paint.Style.STROKE);</span><br><span class="line">       mPaint.setColor(Color.parseColor(<span class="string">&quot;#5cb85c&quot;</span>));</span><br><span class="line">       mPaint.setStrokeWidth(dip2px(<span class="number">2</span>));</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initRect</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       rectF = <span class="keyword">new</span> RectF(mPadding, mPadding, mWidth - mPadding, mWidth - mPadding);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">//dip转px。为了支持多分辨率手机</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">dip2px</span><span class="params">(<span class="keyword">float</span> dpValue)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">final</span> <span class="keyword">float</span> scale = getContext().getResources().getDisplayMetrics().density;</span><br><span class="line">       <span class="keyword">return</span> (<span class="keyword">int</span>) (dpValue * scale + <span class="number">0.5f</span>);</span><br><span class="line">   &#125;<span class="number">123456789101112131415</span></span><br></pre></td></tr></table></figure>

<p>c.重写onMeasure</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">  <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onMeasure</span><span class="params">(<span class="keyword">int</span> widthMeasureSpec, <span class="keyword">int</span> heightMeasureSpec)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onMeasure(widthMeasureSpec, heightMeasureSpec);</span><br><span class="line">        initPaint();</span><br><span class="line">        initRect();</span><br><span class="line">        mWidth = getMeasuredWidth(); <span class="comment">//当前view在父布局里的宽度。即view所占宽度。</span></span><br><span class="line">        mPadding = dip2px(<span class="number">10</span>);</span><br><span class="line">        mEyeWidth = dip2px(<span class="number">3</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="number">12345678910</span></span><br></pre></td></tr></table></figure>

<p>d.重写OnDraw</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">super</span>.onDraw(canvas);</span><br><span class="line">      mPaint.setStyle(Paint.Style.STROKE);</span><br><span class="line">      <span class="comment">//画微笑弧（从左向右画弧）</span></span><br><span class="line">      canvas.drawArc(rectF, <span class="number">180</span>, endAngle, <span class="keyword">false</span>, mPaint);</span><br><span class="line">      <span class="comment">//设置画笔为实心</span></span><br><span class="line">      mPaint.setStyle(Paint.Style.FILL);</span><br><span class="line">      <span class="comment">//左眼</span></span><br><span class="line">      <span class="keyword">if</span> (isSmileLeft) &#123;</span><br><span class="line">          canvas.drawCircle(mPadding + mEyeWidth + mEyeWidth / <span class="number">2</span>, mWidth / <span class="number">3</span>, mEyeWidth, mPaint);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//右眼</span></span><br><span class="line">      <span class="keyword">if</span> (isSmileRight) &#123;</span><br><span class="line">          canvas.drawCircle(mWidth - mPadding - mEyeWidth - mEyeWidth / <span class="number">2</span>, mWidth / <span class="number">3</span>, mEyeWidth, mPaint);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>e.自定义View中的动画效果实现</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * startAnim()不带参数的方法</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startAnim</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      stopAnim();</span><br><span class="line">      startViewAnim(<span class="number">0f</span>, <span class="number">1f</span>, <span class="number">2000</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 停止动画的方法</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">stopAnim</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (valueAnimator != <span class="keyword">null</span>) &#123;</span><br><span class="line">          clearAnimation();</span><br><span class="line">          isSmileLeft = <span class="keyword">false</span>;</span><br><span class="line">          isSmileRight = <span class="keyword">false</span>;</span><br><span class="line">          mAnimatedValue = <span class="number">0f</span>;</span><br><span class="line">          valueAnimator.end();</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 开始动画的方法</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> startF 起始值</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> endF   结束值</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> time  动画的时间</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">private</span> ValueAnimator <span class="title">startViewAnim</span><span class="params">(<span class="keyword">float</span> startF, <span class="keyword">final</span> <span class="keyword">float</span> endF, <span class="keyword">long</span> time)</span> </span>&#123;</span><br><span class="line">      <span class="comment">//设置valueAnimator 的起始值和结束值。</span></span><br><span class="line">      valueAnimator = ValueAnimator.ofFloat(startF, endF);</span><br><span class="line">      <span class="comment">//设置动画时间</span></span><br><span class="line">      valueAnimator.setDuration(time);</span><br><span class="line">      <span class="comment">//设置补间器。控制动画的变化速率</span></span><br><span class="line">      valueAnimator.setInterpolator(<span class="keyword">new</span> LinearInterpolator());</span><br><span class="line">      <span class="comment">//设置监听器。监听动画值的变化，做出相应方式。</span></span><br><span class="line">      valueAnimator.addUpdateListener(<span class="keyword">new</span> ValueAnimator.AnimatorUpdateListener() &#123;</span><br><span class="line">          <span class="meta">@Override</span></span><br><span class="line">          <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationUpdate</span><span class="params">(ValueAnimator valueAnimator)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">              mAnimatedValue = (<span class="keyword">float</span>) valueAnimator.getAnimatedValue();</span><br><span class="line">              <span class="comment">//如果value的值小于0.5</span></span><br><span class="line">              <span class="keyword">if</span> (mAnimatedValue &lt; <span class="number">0.5</span>) &#123;</span><br><span class="line">                  isSmileLeft = <span class="keyword">false</span>;</span><br><span class="line">                  isSmileRight = <span class="keyword">false</span>;</span><br><span class="line">                  endAngle = -<span class="number">360</span> * (mAnimatedValue);</span><br><span class="line">                  <span class="comment">//如果value的值在0.55和0.7之间</span></span><br><span class="line">              &#125; <span class="keyword">else</span> <span class="keyword">if</span> (mAnimatedValue &gt; <span class="number">0.55</span> &amp;&amp; mAnimatedValue &lt; <span class="number">0.7</span>) &#123;</span><br><span class="line">                  endAngle = -<span class="number">180</span>;</span><br><span class="line">                  isSmileLeft = <span class="keyword">true</span>;</span><br><span class="line">                  isSmileRight = <span class="keyword">false</span>;</span><br><span class="line">                  <span class="comment">//其他</span></span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                  endAngle = -<span class="number">180</span>;</span><br><span class="line">                  isSmileLeft = <span class="keyword">true</span>;</span><br><span class="line">                  isSmileRight = <span class="keyword">true</span>;</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="comment">//重绘</span></span><br><span class="line">              postInvalidate();</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="keyword">if</span> (!valueAnimator.isRunning()) &#123;</span><br><span class="line">          valueAnimator.start();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> valueAnimator;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>关于idea配置中遇到的坑</title>
    <url>/2021/01/07/%E5%85%B3%E4%BA%8Eidea%E9%85%8D%E7%BD%AE%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>​       配置idea时一定弄清楚http proxy，这是http代理，个人理解相当于是VPN，配置了这个后而导致gradle无法正常下载，从而引发了一系列问题，谨记。</p>
]]></content>
  </entry>
</search>
